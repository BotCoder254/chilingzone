name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: |
          cd 8StreamApi
          npm ci
        
      - name: Build
        run: |
          cd 8StreamApi
          npm run build
        env:
          NODE_ENV: production
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          
      - name: Check Types
        run: |
          cd 8StreamApi
          npx tsc --noEmit
        
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./8StreamApi
          file: ./8StreamApi/Dockerfile
          push: false
          load: true
          tags: chilingzone:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Test Docker image
        run: |
          docker run --rm chilingzone:test npm test
        env:
          NODE_ENV: test
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }} 